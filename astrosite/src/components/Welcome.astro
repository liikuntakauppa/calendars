---
import { getCollection } from 'astro:content';

import background from '../assets/background.svg';

import { sha1 } from '../utils/hash.ts';

const isProd = import.meta.env.PROD;
const isDev = import.meta.env.DEV;

const calendars = await getCollection('calendars');
console.log(`Astro's Welcome.astro component got ${calendars.length} calendar events from the collection named ${JSON.stringify('calendars')}:\n` + JSON.stringify(calendars.map((c: any) => c.id + ': ' + c.data.name), null, 2));

const calendarURLs: string[] = calendars.map((c: any) => `/calendars/calendars/${c.data.fileName}`)

const calendarURLAbsolutePaths = isProd
	? calendarURLs.map(path => new URL(path, Astro.site).href)
	: isDev ? calendarURLs.map(path => new URL(path, new URL(Astro.request.url)).href) : calendarURLs;

---

<div id="container">
	<img id="background" src={background.src} alt="" fetchpriority="high" />
	<main>
		<section id="hero">
			<p>
				Subscribe to these calendars on iOS or macOS devices below:
			</p>
			<section id="links">
				<script is:inline>
					function copyToClipboard(text, elementId) {
						console.log('Copying to clipboard:', text);
						console.log('The function is bound to ', this);
						navigator.clipboard.writeText(text);
						const button = document.getElementById(elementId);
						console.log('Adding success class to button');
						button.classList.add("copied")
						button.classList.remove("ready")
						setTimeout(() => {
							console.log('Removing success class from button');
							button.classList.remove("copied")
							button.classList.add("ready")
						}, 150);
					}
				</script>
				<ul>
					{calendarURLAbsolutePaths.map(url => (
						<li><code>{url}</code> <button class="copy-to-clipboard-button ready" id={sha1(url)} onclick={`copyToClipboard(${JSON.stringify(url)}, ${JSON.stringify(sha1(url))})`}><span class="material-symbols-outlined">content_copy</span></button></li>
					))}
				</ul>
			</section>
		</section>
	</main>

</div>

<style>
	.copy-to-clipboard-button {
		border: 0;
		border-radius: 20px;
		width: 40px;
		height: 40px;
	}
	.copy-to-clipboard-button.ready {
		background-color: transparent;
		transition: background-color .150s linear;
	}
	.copy-to-clipboard-button.copied {
		background-color: #ccccccaa;
	}

	#background {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		z-index: -1;
		filter: blur(100px);
	}

	#container {
		font-family: Inter, Roboto, 'Helvetica Neue', 'Arial Nova', 'Nimbus Sans', Arial, sans-serif;
		height: 100%;
	}

	main {
		height: 100%;
		display: flex;
		justify-content: center;
	}

	#hero {
		display: flex;
		align-items: start;
		flex-direction: column;
		justify-content: center;
		padding: 16px;
	}

	h1 {
		font-size: 22px;
		margin-top: 0.25em;
	}

	#links {
		display: flex;
		gap: 16px;
	}

	#links a {
		display: flex;
		align-items: center;
		padding: 10px 12px;
		color: #111827;
		text-decoration: none;
		transition: color 0.2s;
	}

	#links a:hover {
		color: rgb(78, 80, 86);
	}

	#links a svg {
		height: 1em;
		margin-left: 8px;
	}

	#links a.button {
		color: white;
		background: linear-gradient(83.21deg, #3245ff 0%, #bc52ee 100%);
		box-shadow:
			inset 0 0 0 1px rgba(255, 255, 255, 0.12),
			inset 0 -2px 0 rgba(0, 0, 0, 0.24);
		border-radius: 10px;
	}

	#links a.button:hover {
		color: rgb(230, 230, 230);
		box-shadow: none;
	}

	pre {
		font-family: ui-monospace, 'Cascadia Code', 'Source Code Pro', Menlo, Consolas,
			'DejaVu Sans Mono', monospace;
		font-weight: normal;
		background: linear-gradient(14deg, #d83333 0%, #f041ff 100%);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-clip: text;
		margin: 0;
	}

	h2 {
		margin: 0 0 1em;
		font-weight: normal;
		color: #111827;
		font-size: 20px;
	}

	p {
		color: #4b5563;
		font-size: 16px;
		line-height: 24px;
		letter-spacing: -0.006em;
		margin: 0;
	}

	code {
		display: inline-block;
		background:
			linear-gradient(66.77deg, #f3cddd 0%, #f5cee7 100%) padding-box,
			linear-gradient(155deg, #d83333 0%, #f041ff 18%, #f5cee7 45%) border-box;
		border-radius: 8px;
		border: 1px solid transparent;
		padding: 6px 8px;
	}

	.box {
		padding: 16px;
		background: rgba(255, 255, 255, 1);
		border-radius: 16px;
		border: 1px solid white;
	}

	@media screen and (max-height: 368px) {
		#news {
			display: none;
		}
	}

	@media screen and (max-width: 768px) {
		#container {
			display: flex;
			flex-direction: column;
		}

		#hero {
			display: block;
			padding-top: 10%;
		}

		#links {
			flex-wrap: wrap;
		}

		#links a.button {
			padding: 14px 18px;
		}

		#news {
			right: 16px;
			left: 16px;
			bottom: 2.5rem;
			max-width: 100%;
		}

		h1 {
			line-height: 1.5;
		}
	}
</style>
